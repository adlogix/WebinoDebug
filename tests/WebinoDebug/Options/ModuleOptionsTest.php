<?php
/**
 * Webino (http://webino.sk/)
 *
 * @link        https://github.com/webino/WebinoDebug/ for the canonical source repository
 * @copyright   Copyright (c) 2014 Webino, s. r. o. (http://webino.sk/)
 * @license     BSD-3-Clause
 */

namespace WebinoDebug\Options;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-10-18 at 00:35:27.
 */
class ModuleOptionsTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ModuleOptions
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ModuleOptions;
    }

    /**
     *
     */
    public function testAssertDefaultOptions()
    {
        $this->assertTrue($this->object->isEnabled());
        $this->assertNull($this->object->getMode());
        $this->assertFalse($this->object->hasBar());
        $this->assertTrue($this->object->isStrict());
        $this->assertSame(realpath('data/log'), $this->object->getLog());
        $this->assertSame('', $this->object->getEmail());
        $this->assertSame(3, $this->object->getMaxDepth());
        $this->assertSame(150, $this->object->getMaxLen());

        $this->assertArraySubset(
            ['error/index' => realpath(__DIR__ . '/../../../src/WebinoDebug/Options') . '/../view/error/index.phtml'],
            $this->object->getTemplateMap()
        );
    }

    /**
     *
     */
    public function testSettersAndGetters()
    {
        $cfg = [
            'enabled'     => false,
            'mode'        => true,
            'bar'         => true,
            'strict'      => false,
            'log'         => 'data',
            'email'       => 'test@example.com',
            'maxDepth'    => 5,
            'maxLen'      => 170,
            'templateMap' => ['test' => 'example'],
        ];

        $options = new ModuleOptions($cfg);

        $this->assertFalse($options->isEnabled());
        $this->assertTrue($options->getMode());
        $this->assertTrue($options->hasBar());
        $this->assertFalse($options->isStrict());
        $this->assertSame(realpath($cfg['log']), $options->getLog());
        $this->assertSame($cfg['email'], $options->getEmail());
        $this->assertSame($cfg['maxDepth'], $options->getMaxDepth());
        $this->assertSame($cfg['maxLen'], $options->getMaxLen());
        $this->assertSame($cfg['templateMap'], $options->getTemplateMap());
    }
}
